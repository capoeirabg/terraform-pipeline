name: terraform_pipeline_non_prod
on:
  push:
    branches:    
    - '*'         # matches every branch that doesn't contain a '/'
    - '*/*'       # matches every branch containing a single '/'
    - '**'        # matches every branch
    - '!master'   # excludes master
  pull_request:
    branches: [ "main" ]
env:
  tf_actions_working_dir: ${{ vars.tf_actions_working_dir }}
defaults:
  run:
    shell: bash
jobs:
  run-editorconfig-check: 
    runs-on: ubuntu-latest
    name: .editorconfig check
    steps:
      - uses: actions/checkout@v3
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker
  
  run-markdown-lint: 
    runs-on: ubuntu-latest
    name: markdownlint lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install dependencies
        run: npm install -g markdownlint-cli

      - name: Run Markdown linting
        run: |
          markdownlint **/*.md
  
  run-terraform-fmt:
    name: 'terraform-fmt'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    permissions:
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check -recursive
      continue-on-error: false

  run-checkov:
    runs-on: ubuntu-latest
    env:
      CHECKOV_SKIPPED_CHECKS:
    name: analysis with Checkov 
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Checkov GitHub Action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          #skip_check: CKV_AWS_2 # optional: skip a specific check_id. can be comma separated list
          framework: terraform # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
          output_format: cli # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
          output_file_path: console
          skip_check: ${{ env.CHECKOV_SKIPPED_CHECKS }}
          quiet: true
      # - name: Upload SARIF file
      #   uses: github/codeql-action/upload-sarif@v2

      #   # Results are generated only on a success or failure
      #   # this is required since GitHub by default won't run the next step
      #   # when the previous one has failed. Security checks that do not pass will 'fail'.
      #   # An alternative is to add `continue-on-error: true` to the previous step
      #   # Or 'soft_fail: true' to checkov.
      #   if: success() || failure()
      #   with:
      #     sarif_file: results.sarif

  run-terraform-validate:
    name: 'terraform-validate'
    needs: [run-terraform-fmt, run-checkov, run-editorconfig-check, run-markdown-lint]
    runs-on: ubuntu-latest
    environment: test
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    permissions:
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      id: init
      run: terraform init
      continue-on-error: false

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      continue-on-error: false

  run-terraform-plan:
    name: 'terraform-plan'
    needs: [run-terraform-validate]
    runs-on: ubuntu-latest
    environment: test
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    permissions:
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      id: init
      run: terraform init
      continue-on-error: false

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false
      continue-on-error: false

  run-terraform-apply:
    name: 'terraform-apply'
    needs: [run-terraform-plan]
    if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: test
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.tf_actions_working_dir }}
    permissions:
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      id: init
      run: terraform init
      continue-on-error: false

    - name: Terraform Apply
      id: apply
      run: terraform plan -auto-approve -input=false
      continue-on-error: false
